# Execution begins at address 0 
    .pos 0
    irmovq stack, %rsp  	# Set up stack pointer
    call main		# Execute main program
    halt			# Terminate program 

.align 8
# Source block
src:
    .quad 0x00a
    .quad 0x0b0
    .quad 0xc00
# Destination block
dest:
    .quad 0x111
    .quad 0x222
    .quad 0x333

main:	
    irmovq src,%rdi
    irmovq dest,%rsi
    irmovq $3,%rdx
	call copy_block		# copy_block(&src, &dest, 3)
	ret

# long copy_block(long *src, long *dest, long len)
copy_block:
    irmovq $0,%rax
    jmp test
loop:
    mrmovq (%rdi),%rcx
    rmmovq %rcx,(%rsi) # *dest = *src
    xorq %rcx,%rax # result ^= *dest
    irmovq $1,%rcx
    subq %rcx,%rdx # len--
    irmovq $8,%rcx
    addq %rcx,%rdi # src++
    addq %rcx,%rsi # dest++
test:
    andq %rdx,%rdx
    jg loop
    ret

# The stack starts here and grows to lower addresses
	.pos 0x200		
stack:	
